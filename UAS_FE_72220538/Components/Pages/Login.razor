@page "/"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@using UAS_FE_72220538.Services
@inject ccService ccService
@using UAS_FE_72220538.Model

<div class="login-container">
    <div class="login-card">
        <h2>Login</h2>

        <EditForm Model="@newLogin" OnValidSubmit="@HandleValidSubmit" class="login-form">
            <div class="form-group">
                <label for="email">Email</label>
                <input id="email" class="form-control" type="text" @bind="@newLogin.userName" placeholder="Enter your email" required />
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <input id="password" class="form-control" type="password" @bind="@newLogin.password" placeholder="Enter your password" required />
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Login</button>
                <button type="button" class="btn btn-secondary" @onclick="NavigateToRegister">Register</button>
            </div>
        </EditForm>

        @if (!string.IsNullOrEmpty(token))
        {
            <div class="alert alert-success">
                <strong>Login successful!</strong> Welcome back!
            </div>
        }

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">
                <strong>Error:</strong> @errorMessage
            </div>
        }
    </div>
</div>

@code {
    private login newLogin = new();
    private string token;
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        try
        {
            token = await ccService.LoginAsync(newLogin);
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
}
<style>
    
</style>